<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RVF6+n+QXMw7W4kb1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>